[package]
name = "libsecp256k1"
description = "Pure Rust secp256k1 implementation."
license = "Apache-2.0"
version = "0.7.1"
authors = ["Wei Tang <hi@that.world>"]
repository = "https://github.com/paritytech/libsecp256k1"
keywords = ["crypto", "ECDSA", "secp256k1", "bitcoin", "no_std"]
edition = "2018"
resolver = "2"

[dependencies]
libsecp256k1-core = { version = "0.3.0", path = "core", default-features = false }
arrayref = "0.3"
rand = { version = "0.8", default-features = false }
digest = "0.9"
base64 = { version = "0.21.2", default-features = false, optional = true }
hmac-drbg = { version = "0.3", optional = true }
sha2 = { version = "0.9", optional = true, default-features = false }
typenum = { version = "1.12", optional = true }
serde = { version = "1.0.104", features = ["derive"], default-features = false, optional = true }
lazy_static = { version = "1.4.0", optional = true }

[dev-dependencies]
secp256k1-test = { package = "secp256k1", version = "0.20.3", features = ["rand-std", "recovery"] }
clear_on_drop = "0.2"
serde_json = "1.0"
hex = "0.4"
hex-literal = "0.3.3"
bincode = "1.3.3"
serde = { version = "1.0.104", features = ["derive"], default-features = false }

[build-dependencies]
libsecp256k1-gen-ecmult = { version = "0.3.0", path = "gen/ecmult" }
libsecp256k1-gen-genmult = { version = "0.3.0", path = "gen/genmult" }

[features]
default = ["std", "serde", "hmac", "static-context"]
# Historically, the way to get serde support for PublicKey was by
# enabling `std` feature.  Te maintain backwards compatibility `std`
# enables `serde` feature.  Remove `serde` from list below at least
# once 0.8 is released.
std = ["libsecp256k1-core/std", "sha2/std", "rand/std", "serde"]
serde = ["dep:serde", "base64"]
hmac = ["hmac-drbg", "sha2", "typenum"]
static-context = []
lazy-static-context = ["static-context", "lazy_static", "std"]

[workspace]
members = [
  "./gen/ecmult",
  "./gen/genmult",
]
